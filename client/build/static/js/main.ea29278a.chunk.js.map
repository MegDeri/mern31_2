{"version":3,"sources":["components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","cutText/cutText.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostCounter/PostCounter.js","components/features/PostCounter/PostCounterContainer.js","components/pages/Posts/PostsPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/posts/AddPost/AddPost.js","components/features/PostSingle/PostSingle.js","components/features/PostSingle/PostSingleContainer.js","components/posts/SinglePostPage/SinglePostPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","MainLayout","PageTitle","BASE_URL","getRequest","posts","request","getPages","Math","ceil","amount","postsPerPage","createActionName","name","startRequest","type","START_REQUEST","endRequest","END_REQUEST","errorRequest","error","ERROR_REQUEST","loadPostsByPage","payload","LOAD_POSTS_PAGE","LOAD_POSTS","LOAD_SINGLE_POST","RESET_REQUEST","initialState","data","pending","success","singlePost","presentPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","id","content","author","maxLength","length","substr","lastIndexOf","cutText","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","previousStep","nextStep","pages","onClick","Array","el","page","Posts","loadPostsPage","pagination","textin","defaultProps","connect","dispatch","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostCounter","loadPosts","PostsPage","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","resetRequest","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPost","PostSingle","loadPost","match","params","appId","href","toString","console","log","loadSinglePostRequest","SinglePostPage","ContactPage","NotFoundPage","App","exact","component","Home","Contact","NotFound","rootReducer","combineReducers","statePart","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea29278a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./PageContainer.scss\";\r\n\r\nconst PageContainer = ({ children }) => (\r\n  <div className=\"container-fluid\">{children}</div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from \"react\";\r\n\r\nimport \"./Logo.scss\";\r\n\r\nconst Logo = ({ links, location }) => <h1 className=\"logo\">Blog.app</h1>;\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./MainMenu.scss\";\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    {links.map((link, index) => (\r\n      <li key={index}>\r\n        <Link\r\n          className={(location.pathname === link.path && \"active\") || \"\"}\r\n          to={link.path}\r\n        >\r\n          {link.title}\r\n        </Link>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      path: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props} />);\r\n","import React from \"react\";\r\nimport Logo from \"../../common/Logo/Logo\";\r\nimport MainMenu from \"../../layout/MainMenu/MainMenu\";\r\nimport \"./NavBar.scss\";\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    links: [\r\n      { path: \"/\", title: \"Home\" },\r\n      { path: \"/posts/new\", title: \"Add post\" },\r\n      { path: \"/posts\", title: \"Posts\" },\r\n      { path: \"/contact\", title: \"Contact\" }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Logo />\r\n        <MainMenu links={links}></MainMenu>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport PageContainer from \"../PageContainer/PageContainer\";\r\nimport NavBar from \"../../features/NavBar/NavBar\";\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <div>\r\n    <PageContainer>\r\n      <NavBar />\r\n      {children}\r\n    </PageContainer>\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./PageTitle.scss\";\r\n\r\nconst PageTitle = ({ children }) => <h1 className=\"page-title\">{children}</h1>;\r\n\r\nPageTitle.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n\r\nexport default PageTitle;\r\n","export const API_URL = \"/api\";\r\nexport const BASE_URL = \"https://mern31-6.herokuapp.com\";\r\n","import axios from \"axios\";\r\nimport { API_URL } from \"../config\";\r\nimport { BASE_URL } from \"../config\";\r\n\r\n/* SELECTORS */\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const counterPosts = ({ posts }) => posts.data.length;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getPages = ({ posts }) =>\r\n  Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const presentPage = ({ posts }) => posts.presentPage;\r\n\r\n/* ACTIONS */\r\n// action name creator\r\nconst reducerName = \"posts\";\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\r\nexport const resetRequest = () => ({ type: RESET_REQUEST });\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\nexport const LOAD_POSTS = createActionName(\"LOAD_POSTS\");\r\nexport const LOAD_POSTS_PAGE = createActionName(\"LOAD_POSTS_PAGE\");\r\nexport const LOAD_SINGLE_POST = createActionName(\"LOAD_SINGLE_POST\");\r\nexport const START_REQUEST = createActionName(\"START_REQUEST\");\r\nexport const END_REQUEST = createActionName(\"END_REQUEST\");\r\nexport const ERROR_REQUEST = createActionName(\"ERROR_REQUEST\");\r\nexport const RESET_REQUEST = createActionName(\"RESET_REQUEST\");\r\n\r\n/* INITIAL STATE */\r\nconst initialState = {\r\n  data: [],\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null\r\n  },\r\n  singlePost: [],\r\n  amount: 0,\r\n  postsPerPage: 5,\r\n  presentPage: 1\r\n};\r\n\r\n/* THUNKS */\r\n//load all Posts\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts`);\r\n      //await new Promise((resolve, reject) => setTimeout(resolve, 2000));;\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\n//Load single Post\r\nexport const loadSinglePostRequest = id => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts/${id}`);\r\n      //await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\n//add Post\r\nexport const addPostRequest = post => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      await axios.post(`${BASE_URL}${API_URL}/posts`, post);\r\n      //await new Promise((resolve, reject) => setTimeout(resolve, 2000));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\r\n  return async dispatch => {\r\n    dispatch(startRequest());\r\n    try {\r\n      //const postsPerPage = 5;\r\n\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n\r\n      let res = await axios.get(\r\n        `${BASE_URL}${API_URL}/posts/range/${startAt}/${limit}`\r\n      );\r\n\r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page\r\n      };\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n\r\n/* REDUCER */\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case LOAD_POSTS:\r\n      return { ...statePart, data: action.payload };\r\n    case LOAD_POSTS_PAGE:\r\n      return {\r\n        ...statePart,\r\n        postsPerPage: action.payload.postsPerPage,\r\n        presentPage: action.payload.presentPage,\r\n        amount: action.payload.amount,\r\n        data: [...action.payload.posts]\r\n      };\r\n    case LOAD_SINGLE_POST:\r\n      return { ...statePart, singlePost: action.payload };\r\n    case START_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: true, error: null, success: null }\r\n      };\r\n    case END_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: null, success: true }\r\n      };\r\n    case RESET_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: null, success: null }\r\n      };\r\n    case ERROR_REQUEST:\r\n      return {\r\n        ...statePart,\r\n        request: { pending: false, error: action.error, success: false }\r\n      };\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Button.scss\";\r\n\r\nconst Button = ({ variant = \"\", children, ...otherProps }) => (\r\n  <button {...otherProps} className={`button button--${variant}`}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./SmallTitle.scss\";\r\n\r\nconst SmallTitle = ({ children, ...otherProps }) => (\r\n  <h2 {...otherProps} className=\"small-title\">\r\n    {children}\r\n  </h2>\r\n);\r\n\r\nSmallTitle.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n\r\nexport default SmallTitle;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <div {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </div>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n\r\nexport default HtmlBox;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport \"./PostSummary.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Button from \"../../common/Button/Button\";\r\nimport SmallTitle from \"../../common/SmallTitle/SmallTitle\";\r\nimport HtmlBox from \"../../common/HtmlBox/HtmlBox\";\r\nimport cutText from \"../../../cutText/cutText\";\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n  <article className=\"post-summary\">\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <HtmlBox>{cutText(content, 100)}</HtmlBox>\r\n    <p>Author: {author}</p>\r\n    <Button variant=\"primary\">\r\n      <Link to={`/posts/${id}`}>Read more</Link>\r\n    </Button>\r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string\r\n};\r\n\r\nexport default PostSummary;\r\n","export default (content, maxLength) => {\r\n  if (content.length < 1) return \"Error\";\r\n  if (content.length <= maxLength) return content;\r\n  return content.substr(0, content.lastIndexOf(\" \", maxLength)) + \"...\";\r\n};\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport PostSummary from \"../PostSummary/PostSummary\";\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts.map(post => (\r\n        <PostSummary key={post.id} {...post} />\r\n      ))}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired\r\n    })\r\n  )\r\n};\r\n\r\nexport default PostsList;\r\n","import React from \"react\";\r\nimport { Animated } from \"react-animated-css\";\r\n\r\nimport \"./Spinner.scss\";\r\n\r\nconst Spinner = () => (\r\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </Animated>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Animated } from \"react-animated-css\";\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from \"react-icons/md\";\r\n\r\nimport \"./Alert.scss\";\r\n\r\nconst Alert = ({ variant = \"\", children, ...otherProps }) => {\r\n  const icon = () => {\r\n    switch (variant) {\r\n      case \"info\":\r\n        return <MdInfoOutline />;\r\n      case \"success\":\r\n        return <MdDone />;\r\n      case \"warning\":\r\n        return <MdErrorOutline />;\r\n      case \"error\":\r\n        return <MdErrorOutline />;\r\n      default:\r\n        return <MdInfoOutline />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  );\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Pagination.scss\";\r\n\r\nclass Pagination extends React.Component {\r\n  state = {\r\n    presentPage: this.props.initialPage || 1\r\n  };\r\n\r\n  changePage = newPage => {\r\n    const { onPageChange } = this.props;\r\n\r\n    this.setState({ presentPage: newPage });\r\n    onPageChange(newPage);\r\n  };\r\n\r\n  previousStep = () => {\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n    if (presentPage > 1) changePage(presentPage - 1);\r\n  };\r\n\r\n  nextStep = () => {\r\n    const { pages } = this.props;\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n    if (presentPage < pages) changePage(presentPage + 1);\r\n  };\r\n\r\n  render() {\r\n    const { pages } = this.props;\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n\r\n    return (\r\n      <div className=\"pagination\">\r\n        <ul className=\"pagination__list\">\r\n          {presentPage > 1 ? (\r\n            <li\r\n              className={`pagination__list__item${\r\n                true ? \" pagination__list__item--active\" : \"\"\r\n              }`}\r\n              onClick={this.previousStep}\r\n            >\r\n              &lt;\r\n            </li>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {[...Array(pages)].map((el, page) => (\r\n            <li\r\n              key={++page}\r\n              onClick={() => {\r\n                changePage(page);\r\n              }}\r\n              className={`pagination__list__item${\r\n                page === presentPage ? \" pagination__list__item--active\" : \"\"\r\n              }`}\r\n            >\r\n              {page}\r\n            </li>\r\n          ))}\r\n          {presentPage === pages ? (\r\n            \"\"\r\n          ) : (\r\n            <li\r\n              className={`pagination__list__item${\r\n                true ? \" pagination__list__item--active\" : \"\"\r\n              }`}\r\n              onClick={this.nextStep}\r\n            >\r\n              &gt;\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport PostsList from \"../PostsList/PostsList\";\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport Pagination from \"../../common/Pagination/Pagination\";\r\n\r\nclass Posts extends React.Component {\r\n  componentDidMount() {\r\n    const { loadPostsByPage, initialPage, postsPerPage } = this.props;\r\n    loadPostsByPage(initialPage, postsPerPage);\r\n  }\r\n\r\n  loadPostsPage = page => {\r\n    const { loadPostsByPage, postsPerPage } = this.props;\r\n\r\n    loadPostsByPage(page, postsPerPage);\r\n  };\r\n\r\n  render() {\r\n    const { posts, request, pages, pagination, presentPage } = this.props;\r\n    const { loadPostsPage } = this;\r\n\r\n    const textin = request.pending ? (\r\n      <Spinner />\r\n    ) : request.success && posts.length > 0 ? (\r\n      pagination === true ? (\r\n        <div>\r\n          <PostsList posts={posts} />\r\n          <Pagination\r\n            pages={pages}\r\n            onPageChange={loadPostsPage}\r\n            initialPage={presentPage}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <PostsList posts={posts} />\r\n      )\r\n    ) : (\r\n      <Alert variant=\"error\"> {request.error} </Alert> || (\r\n        <Alert variant=\"info\"> No posts!!! </Alert>\r\n      )\r\n    );\r\n\r\n    return <div> {textin} </div>;\r\n  }\r\n}\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  loadPostsByPage: PropTypes.func.isRequired\r\n};\r\n\r\nPosts.defaultProps = {\r\n  initialPage: 1,\r\n  postsPerPage: 5,\r\n  pagination: true\r\n};\r\n\r\nexport default Posts;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  getPosts,\r\n  getRequest,\r\n  getPages,\r\n  loadPostsByPageRequest,\r\n  presentPage\r\n} from \"../../../redux/postsRedux\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n  presentPage: presentPage(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) =>\r\n    dispatch(loadPostsByPageRequest(page, postsPerPage))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n","import React from \"react\";\r\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\r\nimport Posts from \"../../features/Posts/PostsContainer\";\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <PageTitle>Blog</PageTitle>\r\n    <Posts postsPerPage={3} pagination={false} />\r\n  </div>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nclass PostCounter extends React.Component {\r\n  render() {\r\n    const { posts } = this.props;\r\n\r\n    return <div>{posts > 0 ? \"Posts amount: \" + posts : \" No posts \"}</div>;\r\n  }\r\n}\r\nPostCounter.propTypes = {\r\n  posts: PropTypes.number\r\n};\r\n\r\nexport default PostCounter;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  counterPosts,\r\n  loadPostsRequest,\r\n  getRequest\r\n} from \"../../../redux/postsRedux\";\r\nimport PostCounter from \"./PostCounter\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: counterPosts(state),\r\n  request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPosts: () => dispatch(loadPostsRequest())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostCounter);\r\n","import React from \"react\";\r\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\r\nimport PostCounter from \"../../features/PostCounter/PostCounterContainer\";\r\nimport Posts from \"../../features/Posts/PostsContainer\";\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostCounter />\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./TextField.scss\";\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span\r\n      className={`text-field__label ${\r\n        !value.length > 0 ? \"text-field__label--big\" : \"\"\r\n      }`}\r\n    >\r\n      {label}\r\n    </span>\r\n    <input\r\n      {...otherProps}\r\n      value={value}\r\n      onChange={onChange}\r\n      className=\"text-field__input\"\r\n    />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TextField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./SectionTitle.scss\";\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">{children}</h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Editor from \"react-medium-editor\";\r\nimport \"medium-editor/dist/css/medium-editor.css\";\r\nimport \"medium-editor/dist/css/themes/default.css\";\r\n\r\nimport TextField from \"../../common/TextField/TextField\";\r\nimport SectionTitle from \"../../common/SectionTitle/SectionTitle\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\n\r\nimport \"./PostForm.scss\";\r\n\r\nclass PostForm extends React.Component {\r\n  state = {\r\n    post: {\r\n      title: \"\",\r\n      author: \"\",\r\n      content: \"\"\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value } });\r\n  };\r\n\r\n  handleEditor = text => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text } });\r\n  };\r\n\r\n  addPost = e => {\r\n    const { addPost, resetRequest } = this.props;\r\n    const { post } = this.state;\r\n\r\n    e.preventDefault();\r\n    addPost(post);\r\n    resetRequest();\r\n  };\r\n\r\n  render() {\r\n    const { post } = this.state;\r\n    const { handleChange, handleEditor, addPost } = this;\r\n    const { request } = this.props;\r\n\r\n    if (request.error) return <Alert variant=\"error\">{request.error}</Alert>;\r\n    else if (request.success)\r\n      return <Alert variant=\"success\">Post has been added!</Alert>;\r\n    else if (request.pending) return <Spinner />;\r\n    else\r\n      return (\r\n        <form onSubmit={addPost}>\r\n          <TextField\r\n            label=\"Title\"\r\n            value={post.title}\r\n            onChange={handleChange}\r\n            name=\"title\"\r\n          />\r\n\r\n          <TextField\r\n            label=\"Author\"\r\n            value={post.author}\r\n            onChange={handleChange}\r\n            name=\"author\"\r\n          />\r\n\r\n          <SectionTitle>Edit post content</SectionTitle>\r\n          <Editor\r\n            className=\"content-editor\"\r\n            text={post.content}\r\n            onChange={handleEditor}\r\n            options={{\r\n              placeholder: false,\r\n              toolbar: {\r\n                buttons: [\"bold\", \"italic\", \"underline\", \"anchor\", \"h2\", \"h3\"]\r\n              }\r\n            }}\r\n          />\r\n\r\n          <Button variant=\"primary\">Add post</Button>\r\n        </form>\r\n      );\r\n  }\r\n}\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PostForm;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  getRequest,\r\n  addPostRequest,\r\n  resetRequest\r\n} from \"../../../redux/postsRedux\";\r\nimport PostForm from \"./PostForm\";\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: post => dispatch(addPostRequest(post)),\r\n  resetRequest: () => dispatch(resetRequest())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);\r\n","import React from \"react\";\r\nimport PostForm from \"../../features/PostForm/PostFormContainer\";\r\n\r\nconst AddPost = () => (\r\n  <div>\r\n    <h1>Add Post</h1>\r\n    <PostForm />\r\n  </div>\r\n);\r\n\r\nexport default AddPost;\r\n","import React from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Spinner from \"../../common/Spinner/Spinner\";\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport HtmlBox from \"../../common/HtmlBox/HtmlBox\";\r\nimport SmallTitle from \"../../common/SmallTitle/SmallTitle\";\r\nimport { FacebookProvider, Comments, ShareButton } from \"react-facebook\";\r\nimport { BASE_URL } from \"../../../config.js\";\r\n\r\nclass PostSingle extends React.Component {\r\n  componentDidMount() {\r\n    const { loadPost, match } = this.props;\r\n    loadPost(match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { posts, request, location } = this.props;\r\n\r\n    const textin = request.pending ? (\r\n      <Spinner />\r\n    ) : request.success ? (\r\n      posts.length > 0 ? (\r\n        <article className=\"post-summary\">\r\n          <SmallTitle>{posts[0].title}</SmallTitle>\r\n          <HtmlBox>{posts[0].content}</HtmlBox>\r\n          <p>Author: {posts[0].author}</p>\r\n          <FacebookProvider appId=\"381113066102363\">\r\n            <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n          </FacebookProvider>\r\n          <FacebookProvider appId=\"381113066102363\">\r\n            <ShareButton\r\n              className=\"fb-share-button\"\r\n              href={`${BASE_URL}/${location.pathname}`}\r\n            >\r\n              Share this link!\r\n            </ShareButton>\r\n          </FacebookProvider>\r\n        </article>\r\n      ) : (\r\n        <Alert variant=\"info\"> No posts!!! </Alert>\r\n      )\r\n    ) : (\r\n      ((<Alert variant=\"error\"> {request.error.toString()} </Alert>),\r\n      console.log(request.error))\r\n    );\r\n\r\n    return <div>{textin}</div>;\r\n  }\r\n}\r\n\r\nPostSingle.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  loadPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withRouter(props => <PostSingle {...props} />);\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  getRequest,\r\n  loadSinglePostRequest,\r\n  getSinglePost\r\n} from \"../../../redux/postsRedux\";\r\nimport PostSingle from \"./PostSingle\";\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getSinglePost(state),\r\n  request: getRequest(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPost: id => dispatch(loadSinglePostRequest(id))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostSingle);\r\n","import React from \"react\";\r\nimport SinglePost from \"../../features/PostSingle/PostSingleContainer\";\r\n\r\nconst SinglePostPage = () => (\r\n  <div>\r\n    <SinglePost />\r\n  </div>\r\n);\r\n\r\nexport default SinglePostPage;\r\n","import React from \"react\";\r\nimport PageTitle from \"../../common/PageTitle/PageTitle\";\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n    <PageTitle>Contact</PageTitle>\r\n    <p>Your Favourite Blooger Ltd.</p>\r\n    <p>9432 Division Street</p>\r\n    <p>Stone Mountain, GA 30083</p>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport MainLayout from \"./components/layout/MainLayout/MainLayout\";\r\n\r\n// import routes\r\nimport Home from \"./components/pages/Home/HomePage\";\r\nimport Posts from \"./components/pages/Posts/PostsPage\";\r\nimport AddPost from \"./components/posts/AddPost/AddPost\";\r\nimport SinglePostPage from \"./components/posts/SinglePostPage/SinglePostPage\";\r\nimport Contact from \"./components/pages/Contact/ContactPage\";\r\nimport NotFound from \"./components/pages/NotFound/NotFoundPage\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/posts\" exact component={Posts} />\r\n          <Route path=\"/posts/new\" exact component={AddPost} />\r\n          <Route path=\"/posts/:id\" exact component={SinglePostPage} />\r\n          <Route path=\"/contact\" exact component={Contact} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </MainLayout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// import reducers\r\nimport posts from \"./postsRedux\";\r\n\r\n// combine reducers\r\nconst rootReducer = combineReducers({\r\n  posts\r\n});\r\n\r\n// create store\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./styles/global.scss\";\r\nimport \"animate.css/animate.min.css\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}